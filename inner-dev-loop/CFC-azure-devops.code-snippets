{
	"Commit the current changes to your local feature branch": {
		"scope": "powershell",
		"prefix": "CFC01-commit-initial-changes",
		"body": [
			"#",
			"# ╔════════════════════════════════════════════════════════════════════════════════════════╗",
			"# ║            CFC01: Commit the current changes to your local feature branch              ║",
			"# ╚════════════════════════════════════════════════════════════════════════════════════════╝",
			"#",
			"# In Git, a commit is a snapshot of the changes you've made to the code. It is a way to save",
			"# your progress and document what changes were made. Commits are stored in your local branch",
			"# and can be pushed to a remote repository for others to see.",
			"#",
			"# VS Code offers an easy way to see your Git changes. In the Source Control tab, you can view",
			"# modified files, new files, and deleted files. The color indicators help you quickly identify",
			"# which lines have been added, removed, or modified.",
			"#",
			"# After reviewing your changes, you need to 'stage' them (preparing them for a commit) using",
			"# the 'git add' command. Once staged, you create a commit with a message describing the changes.",
			"#",
			"# ──────────────────────────────────────────────────────────────────────────────────────────",
			"#                                        Commands",
			"# ──────────────────────────────────────────────────────────────────────────────────────────",
			"# Step 1: Add all changes to the staging area.",
			"git add --all",
			"",
			"# Step 2: Commit the staged changes with a descriptive message.",
			"git commit -m \"${1:Initialized repository, created UI and DataModel projects, created Main package}\""
		]
	},
	"Create an Azure DevOps remote repository and push changes": {
		"scope": "powershell",
		"prefix": "CFC02-create-remote-repo",
		"body": [
			"#",
			"# ╔════════════════════════════════════════════════════════════════════════════════════════╗",
			"# ║            CFC02: Create an Azure DevOps remote repository and push changes            ║",
			"# ╚════════════════════════════════════════════════════════════════════════════════════════╝",
			"#",
			"# A remote repository is can be hosted on a platform like Azure DevOps or GitHub.",
			"# It allows multiple developers to collaborate on the same project by pushing and pulling",
			"# changes. When a developer pushes changes to the remote, others can pull those changes into ",
			"# their local repositories, ensuring everyone is working with the latest code.",
			"#",
			"# Continuous Integration (CI) is an automated process where changes pushed to the remote ",
			"# repository trigger builds and tests, ensuring that the codebase remains functional. ",
			"# Integrating changes frequently helps avoid conflicts and errors in larger teams.",
			"#",
			"# ──────────────────────────────────────────────────────────────────────────────────────────",
			"#                                        Commands",
			"# ──────────────────────────────────────────────────────────────────────────────────────────",
			"# Step 1: Set variables",
			"\\$organization = \"${2:thenetworg}\"",
			"\\$projectName = \"${3:DemoInventoryManagement}\"",
			"\\$repositoryName = \"${4:DemoInventoryManagement}\"",
			"",
			"# Step 2: Log in to Azure CLI using your organizational account",
			"az login --allow-no-subscriptions --tenant ${1:networg.com}",
			"",
			"# Step 3: Create a new Azure DevOps project with Git as the source control",
			"az devops project create --name \\$projectName --source-control git --organization \"https://dev.azure.com/\\$organization\"",
			"",
			"# Step 4: Set Azure DevOps CLI defaults",
			"az devops configure --defaults \"organization=https://dev.azure.com/\\$organization project=\\$projectName\"",
			"",
			"# Step 5: Connect the local Git repository to the new remote repository",
			"git remote add origin \"https://\\$organization@dev.azure.com/\\$organization/\\$projectName/_git/\\$repositoryName\"",
			"",
			"# Step 6: Get the repository ID",
			"\\$repositoryObject = az repos show --repository \\$repositoryName --project \"\\$projectName\" --output json",
			"\\$repositoryId = (\\$repositoryObject | ConvertFrom-Json).id",
			"",
			"# Step 7: Push the current changes to the remote repository",
			"git push -u origin --all",
			"",
			"# Step 8: Open the project in a browser",
			"az devops project show --open --project \\$projectName"
		]
	},
	"Set up branch policy to prevent direct pushes to main": {
		"scope": "powershell",
		"prefix": "CFC03-setup-branch-policy",
		"body": [
			"#",
			"# ╔════════════════════════════════════════════════════════════════════════════════════════╗",
			"# ║               CFC03: Set up branch policy to prevent direct pushes to ${1:main}             ║",
			"# ╚════════════════════════════════════════════════════════════════════════════════════════╝",
			"#",
			"# A branch policy is essential for maintaining code quality and stability in a collaborative",
			"# development environment. By preventing direct pushes to the ${1:main} branch, you ensure that all",
			"# changes go through a review process via pull requests (PRs).",
			"# This allows other team members to review, comment, and approve changes before they are merged ",
			"# into the ${1:main} branch, reducing the risk of bugs or issues being introduced into production code.",
			"#",
			"# ──────────────────────────────────────────────────────────────────────────────────────────",
			"#                                        Commands",
			"# ──────────────────────────────────────────────────────────────────────────────────────────",
			"# Step 1: Set up the branch policy to require at least one approver and prevent direct pushes to '${1:main}'.",
			"az repos policy approver-count create `",
			"--allow-downvotes true `",
			"--blocking true `",
			"--creator-vote-counts true `",
			"--enabled true `",
			"--minimum-approver-count 1 `",
			"--reset-on-source-push true `",
			"--branch \"${1:main}\" `",
			"--repository-id \\$repositoryId `",
			"--project \"\\$projectName\"",
			"",
			"# Step 2: Review the branch policy settings in the Azure DevOps project settings",
			"Start-Process \"https://dev.azure.com/\\$organization/\\$projectName/_settings/repositories?_a=policiesMid&repo=\\$repositoryId&refs=refs/heads/${1:main}\""
		]
	}
}