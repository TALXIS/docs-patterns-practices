{
	"Create a new Power Platform developer environment": {
		"scope": "powershell",
		"prefix": "CFD01-create-dev-env",
		"body": [
			"#",
			"# ╔════════════════════════════════════════════════════════════════════════════════════════╗",
			"# ║               CFD01: Create a new Power Platform developer environment                 ║",
			"# ╚════════════════════════════════════════════════════════════════════════════════════════╝",
			"#",
			"# Creating a Power Platform developer environment is significantly easier than traditional",
			"# PaaS/IaaS setups. With a single command, all the required infrastructure (backend, frontend,",
			"# database, networking, APIs and security) is ready in few moments.",
			"#",
			"# Any user can create up to 3 developer environments for free by assigning themselves the",
			"# Power Apps Developer Plan (https://aka.ms/PowerApps/DeveloperPlan).",
			"#",
			"# In larger projects, you may set up automation to deploy daily CI builds into a queue",
			"# of environments that developers can claim and use for their feature implementation.",
			"#",
			"# ──────────────────────────────────────────────────────────────────────────────────────────",
			"#                                        Commands",
			"# ──────────────────────────────────────────────────────────────────────────────────────────",
			"# Create a new developer environment (this may take some time).",
			"pac admin create `",
			"--name \"${1:Warehouse Demo Environment}\" `",
			"--currency ${2:EUR} `",
			"--region ${3:europe} `",
			"--type ${4:Developer} `",
			"--domain ${5:inventorymgmtdev}"
		]
	},
	"Authenticate and connect to the development environment": {
		"scope": "powershell",
		"prefix": "CFD02-auth-connect-dev-env",
		"body": [
			"#",
			"# ╔════════════════════════════════════════════════════════════════════════════════════════╗",
			"# ║              CFD02: Authenticate and connect to the development environment            ║",
			"# ╚════════════════════════════════════════════════════════════════════════════════════════╝",
			"#",
			"# Before working with the development environment using the CLI, it's a good practice to",
			"# clear any existing authentication profiles. This helps prevent accidental communication",
			"# with the wrong environment and ensures that all subsequent commands are executed in the",
			"# correct context.The following command clears the current authentication profile and ",
			"# establishes a new connection to the environment we created earlier.",
			"#",
			"# ──────────────────────────────────────────────────────────────────────────────────────────",
			"#                                        Commands",
			"# ──────────────────────────────────────────────────────────────────────────────────────────",
			"# Step 1: Clear any existing authentication profiles.",
			"pac auth clear",
			"",
			"# Step 2: Authenticate and connect to the development environment",
			"pac auth create --environment \"${1:https://inventorymgmtdev.crm4.dynamics.com/}\"",
			"",
			"# Step 3: Optionally add someone else to the environment to collaborate (not a good practice!)",
			"# In this case we will add user wich will be used for runing tests",
			"pac admin assign-user `",
			"--user \"${2:int0022-testing@demo.talxis.com}\" `",
			"--role \"System Administrator\""
		]
	},
	"Import the solution to your Dataverse environment": {
		"scope": "powershell",
		"prefix": "CFD03-import-solution-to-dev-env",
		"body": [
			"#",
			"# ╔════════════════════════════════════════════════════════════════════════════════════════╗",
			"# ║                CFD03: Import the solution to your Dataverse environment               ║",
			"# ╚════════════════════════════════════════════════════════════════════════════════════════╝",
			"#",
			"# We are now ready to deploy the solutions to the Dataverse environment we created earlier.",
			"# On Windows, you can use the package deployer to deploy solutions as a package.",
			"# However, on macOS, the package deployer is not supported yet, so we need to manually import",
			"# the solutions one by one.",
			"#",
			"# ──────────────────────────────────────────────────────────────────────────────────────────",
			"#                                        Commands",
			"# ──────────────────────────────────────────────────────────────────────────────────────────",
			"# Step 1: Build the whole repository (as unmanaged solutions).",
			"dotnet build",
			"",
			"# Step 2: Import the locally built solutions into Dataverse for modification in Power Apps Maker.",
			"",
			"# Windows:",
			"pac package deploy --package \"./src/Packages.Main/bin/Debug/Packages.Main.1.0.0.pdpkg.zip\"",
			"",
			"# macOS:",
			"cd \"./src/Solutions.DataModel/\"",
			"pac solution import",
			"cd ../..",
			"",
			"cd \"./src/Solutions.UI/\"",
			"pac solution import",
			"cd ../..",
			"",
			"cd \"./src/Solutions.Security/\"",
			"pac solution import",
			"cd ../..",
			"",
			"# Step 3: Open the Power Apps Maker in the web browser.",
			"pac tool maker"
		]
	},
	"Create a Service Principal (no Azure roles)": {
		"scope": "powershell",
		"prefix": "CFD04-create-spn",
		"body": [
			"#",
			"# ╔════════════════════════════════════════════════════════════════════════════════════════╗",
			"# ║                   CFD04: Create a Service Principal                                    ║",
			"# ╚════════════════════════════════════════════════════════════════════════════════════════╝",
			"#",
			"# This command creates an Azure AD Service Principal without assigning any Azure roles.",
			"# The resulting appId, password, and tenant will be used in later steps.",
			"#",
			"# ──────────────────────────────────────────────────────────────────────────────────────────",
			"#                                      Command",
			"# ──────────────────────────────────────────────────────────────────────────────────────────",
			"$$ServicePrincipal = az ad sp create-for-rbac `",
			"  --name \"${1:MyServicePrincipal}\" `",
			"  --skip-assignment `",
			"  | ConvertFrom-Json"
		]
	},
	"Create Dataverse User from SPN with Auto Business Unit and Role": {
		"scope": "powershell",
		"prefix": "CFD11-create-spn-user-advanced",
		"body": [
			"#",
			"# ╔════════════════════════════════════════════════════════════════════════════════════════╗",
			"# ║   CFD11: Create Dataverse User from SPN with Business Unit and Role Lookup           ║",
			"# ╚════════════════════════════════════════════════════════════════════════════════════════╝",
			"#",
			"# This script creates a Dataverse user for a Service Principal (SPN). It dynamically detects",
			"# the Business Unit and System Administrator role by querying the current user context, making",
			"# the process more automated and robust for CI/CD environments.",
			"#",
			"# ──────────────────────────────────────────────────────────────────────────────────────────",
			"#                                     Parameters",
			"# ──────────────────────────────────────────────────────────────────────────────────────────",
			"$$orgUrl = \"https://inventorymgmtdev.crm4.dynamics.com/\"",
			"$$clientId = $$ServicePrincipal.appId  # Azure AD Application (client) ID",
			"",
			"# ──────────────────────────────────────────────────────────────────────────────────────────",
			"#                          Step 1: Get Auth Token + WhoAmI Info",
			"# ──────────────────────────────────────────────────────────────────────────────────────────",
			"$$token = (Get-AzAccessToken -ResourceUrl $$orgUrl).Token",
			"",
			"$$whoAmIUrl = \"$$orgUrl/api/data/v9.2/WhoAmI\"",
			"$$response = Invoke-RestMethod -Uri $$whoAmIUrl -Method Get -Headers @{",
			"    \"Authorization\"     = \"Bearer $$token\"",
			"    \"Accept\"           = \"application/json\"",
			"    \"OData-MaxVersion\" = \"4.0\"",
			"    \"OData-Version\"    = \"4.0\"",
			"}",
			"",
			"$$businessUnitId = $$response.BusinessUnitId",
			"$$userId = $$response.UserId",
			"",
			"# ──────────────────────────────────────────────────────────────────────────────────────────",
			"#                  Step 2: Resolve 'System Administrator' Role ID",
			"# ──────────────────────────────────────────────────────────────────────────────────────────",
			"$$userUrl = \"$$orgUrl/api/data/v9.2/systemusers($$userId)?`$expand=systemuserroles_association(`$select=name,roleid)\"",
			"$$userResponse = Invoke-RestMethod -Uri $$userUrl -Method Get -Headers @{",
			"    \"Authorization\"     = \"Bearer $$token\"",
			"    \"Accept\"           = \"application/json\"",
			"    \"OData-MaxVersion\" = \"4.0\"",
			"    \"OData-Version\"    = \"4.0\"",
			"}",
			"",
			"$$systemAdminRole = $$userResponse.systemuserroles_association | Where-Object { $$_.name -ieq \"System Administrator\" }",
			"$$roleId = $$systemAdminRole.roleid",
			"",
			"# ──────────────────────────────────────────────────────────────────────────────────────────",
			"#               Step 3: Create New SPN-Linked SystemUser in Dataverse",
			"# ──────────────────────────────────────────────────────────────────────────────────────────",
			"$$headers = @{",
			"    Authorization       = \"Bearer $$token\"",
			"    \"Content-Type\"     = \"application/json\"",
			"    \"Accept\"           = \"application/json\"",
			"    \"OData-MaxVersion\" = \"4.0\"",
			"    \"OData-Version\"    = \"4.0\"",
			"    \"Prefer\"           = \"return=representation\"",
			"}",
			"",
			"$$createBody = @{",
			"    applicationid = $$clientId",
			"    isdisabled = $$false",
			"    accessmode = 4",
			"    \"businessunitid@odata.bind\" = \"/businessunits($$businessUnitId)\"",
			"} | ConvertTo-Json -Depth 3",
			"",
			"$$createUserResponse = Invoke-RestMethod -Uri \"$$orgUrl/api/data/v9.0/systemusers\" -Method Post -Headers $$headers -Body $$createBody",
			"$$userId = $$createUserResponse.systemuserid",
			"",
			"# ──────────────────────────────────────────────────────────────────────────────────────────",
			"#                          Step 4: Assign Security Role to User",
			"# ──────────────────────────────────────────────────────────────────────────────────────────",
			"$$associationUri = \"$$orgUrl/api/data/v9.0/systemusers($$userId)/systemuserroles_association/`$ref\"",
			"$$body = @{",
			"    \"@odata.id\" = \"$$orgUrl/api/data/v9.0/roles($$roleId)\"",
			"} | ConvertTo-Json -Compress",
			"",
			"$$response = Invoke-RestMethod -Method Post -Uri $$associationUri -Headers $$headers -Body $$body"
		]
	}
}